using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
//Making the game logic
// Made rock paper and scissors objects to handle clicks and 
//check win conditions
//updates every click with forced flags
public class SinglePlayer : MonoBehaviour {
    public GameObject rock;
    public GameObject paper;
    public GameObject scissors;
    public int random = 2;
    bool rockClicked; bool paperClicked; bool scissorsClicked;
    public GameObject draw; public GameObject win; public GameObject lose; public GameObject end;
    public int gamesplayed = 0;
    public int player1win = 0;
    public int player2win = 0;
    public Text endText;
    public Text gameInfo;

    //Start of the logic, sets variables to false 
    // increments games played at every loop
    void Start () {
        rockClicked = false;
        paperClicked = false;
        scissorsClicked = false;
        draw.gameObject.SetActive(false);
        win.gameObject.SetActive(false);
        lose.gameObject.SetActive(false);
        end.gameObject.SetActive(false);
        random = Random.Range(1, 4);
        gameInfo.text = "Games Played: " + gamesplayed + "\nPlayer wins: " + player1win + "\nComputer wins: " + player2win;
        if (gamesplayed == 10)
        {
            End();
        }
        gamesplayed++;
    }

 //checks if player option wins loses or ties against the random
 //number generated by the computer
	void Update () {

        if (rockClicked == true && random == 1)
        {
            Draw();
            rockClicked = false;
        }
        if (rockClicked == true && random == 3)
        {
            P1Win();
            rockClicked = false;
        }
        if (rockClicked == true && random == 2)
        {
            P2Win();
            rockClicked = false;
        }

        if (paperClicked == true && random == 2)
        {
            Draw();
            paperClicked = false;
        }
        if (paperClicked == true && random == 1)
        {
            P1Win();
            paperClicked = false;
        }
        if (paperClicked == true && random == 3)
        {
            P2Win();
            paperClicked = false;
        }

        if (scissorsClicked == true && random == 3)
        {
            Draw();
            scissorsClicked = false;
        }
        if (scissorsClicked == true && random == 2)
        {
            P1Win();
            scissorsClicked = false;
        }
        if (scissorsClicked == true && random == 1)
        {
            P2Win();
            scissorsClicked = false;
        }
    }


    //what gets called when there is a 
    // win loss or draw
    void Draw()
    {
        StartCoroutine(drw());
    }

    IEnumerator drw()
    {
        draw.gameObject.SetActive(true);
        yield return new WaitForSeconds(3f);
        Start();
    }


    void P1Win()
    {
        StartCoroutine(Winp1());
    }
    IEnumerator Winp1()
    {
        win.gameObject.SetActive(true);
        yield return new WaitForSeconds(3f);
        player1win++;
        Start();
    }

    void P2Win()
    {
        StartCoroutine(Winp2());
    }
    IEnumerator Winp2()
    {
        lose.gameObject.SetActive(true);
        yield return new WaitForSeconds(3f);
        player2win++;
        Start();
    }

    //Objects check for clicks
    public void Rock()
    {
        rockClicked = true;
    }

    public void Paper()
    {
        paperClicked = true;
    }

    public void Scissors()
    {
        scissorsClicked = true;
    }

    //End condition, checks who won, sets the panel
    //Shows the user what the outcome was
    void End()
    {
        end.gameObject.SetActive(true);
        
        if (player1win > player2win)
        {
            endText.text = "You beat the computer";
        }
        if (player1win < player2win)
        {
            endText.text = "The computer beat you";
        }
        if (player1win == player2win)
        {
            endText.text = "You and the computer tied!";
        }

    }
}
